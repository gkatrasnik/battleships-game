(()=>{"use strict";const t=t=>{const e=t.name,n=t.length;let l="horizontal";const o=new Array(n).fill(e);return{name:e,length:n,lifes:o,direction:l,getDirection:()=>l,changeDirection:()=>{"horizontal"===l?l="vertical":"vertical"===l&&(l="horizontal")},hit:t=>{o[t]="hit"},isSunk:()=>o.every((t=>"hit"===t))}},e=()=>{let t=Array(10).fill(null).map((()=>Array(10).fill(null)));const e=(e,n,l)=>{if("horizontal"===l.getDirection()){e>10-l.length&&(e=10-l.length),n>9&&(n=9);for(let o=0;o<l.length;o++)if(null!=t[e+o][n])return!1}else if("vertical"===l.getDirection()){n>10-l.length&&(n=10-l.length),e>9&&(e=9);for(let o=0;o<l.length;o++)if(null!=t[e][n+o])return!1}return!0},n=()=>{for(var e=0;e<t.length;e++)for(var n=0;n<t.length;n++)if("object"==typeof t[e][n]&&null!==t[e][n]&&!1===t[e][n].ship.isSunk())return!1;return!0};return{grid:t,getGrid:()=>t,placeShip:(n,l,o,a)=>{if("vertical"===a&&o.changeDirection(),e(n,l,o)){if("horizontal"===o.getDirection()){n>10-o.length&&(n=10-o.length),l>9&&(l=9);for(let e=0;e<o.length;e++)t[n+e][l]={ship:o,i:e}}else if("vertical"===o.getDirection()){l>10-o.length&&(l=10-o.length),n>9&&(n=9);for(let e=0;e<o.length;e++)t[n][l+e]={ship:o,i:e}}}else console.log(`cant place - ${o.name} -  on ${n},${l},${o.getDirection()}`)},isPlaceEmpty:e,recieveAttack:(e,l)=>{null===t[e][l]?t[e][l]="o":"object"==typeof t[e][l]&&null!==t[e][l]&&(t[e][l].ship.hit(t[e][l].i),t[e][l]="x",n()?console.log("all ships are sunk"):console.log("still floating"))},allShipsSunk:n}},n=[{name:"four",length:4},{name:"three1",length:3},{name:"three2",length:3},{name:"two1",length:2},{name:"two2",length:2},{name:"two3",length:2},{name:"one1",length:1},{name:"one2",length:1},{name:"one3",length:1},{name:"one4",length:1}],l=(e="human")=>{let l=o(n);function o(e){let n=[];for(let l=0;l<e.length;l++)n.push(t(e[l]));return n}const a=(t,e)=>(t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t+1))+t),i=t=>{const e=t.getGrid();let n=a(0,9),l=a(0,9);"x"===e[n][l]?(console.log(`ship attacked already (${n},${l})`),i(t)):"o"===e[n][l]?(console.log(`empty spot attacked already (${n},${l})`),i(t)):null===e[n][l]?(console.log(`miss (${n},${l})`),t.recieveAttack(n,l)):(console.log(`hit (${n},${l})`),t.recieveAttack(n,l))};return{getShips:()=>l,getType:()=>e,attack:(t,e,n)=>{n.recieveAttack(t,e)},autoAttack:i,changeHasTurn:()=>{hasTurn=!hasTurn},createShipsArray:o}},o={name:"four",length:4},a=(l("human"),l("comp")),i=e(),r=e(),h=t(o);t(o),r.placeShip(0,0,h,"horizontal"),i.placeShip(0,0,h,"horizontal"),i.placeShip(3,3,h,"horizontal"),a.autoAttack(i),a.autoAttack(i),a.autoAttack(i),a.autoAttack(i),a.autoAttack(i),a.autoAttack(i),a.autoAttack(i),a.autoAttack(i),a.autoAttack(i),a.autoAttack(i),console.log(i.getGrid())})();