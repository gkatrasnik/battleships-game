(()=>{"use strict";const e=(()=>{let e=Array(10).fill(null).map((()=>Array(10).fill(null)));const t=(e,t,l,i)=>{if("horizontal"===l.getDirection()){e>10-l.length&&(e=10-l.length),t>9&&(t=9);for(let n=0;n<l.length;n++)if(null!=i[e+n][t])return!1}else if("vertical"===l.getDirection()){t>10-l.length&&(t=10-l.length),e>9&&(e=9);for(let n=0;n<l.length;n++)if(null!=i[e][t+n])return!1}return!0},l=()=>{for(var t=0;t<e.length;t++)for(var l=0;l<e.length;l++)if("object"==typeof e[t][l]&&null!==e[t][l]&&!1===e[t][l].ship.isSunk())return!1;return!0};return{grid:e,getGrid:()=>e,placeShip:(e,l,i,n,r)=>{let o=(e=>{const t=e.name,l=e.length;let i="horizontal";const n=new Array(l).fill(t);return{name:t,length:l,lifes:n,direction:i,getDirection:()=>i,changeDirection:()=>{"horizontal"===i?i="vertical":"vertical"===i&&(i="horizontal")},hit:e=>{n[e]="hit"},isSunk:()=>n.every((e=>"hit"===e))}})(i),c=r;if("vertical"===n&&o.changeDirection(),t(e,l,o,c)){if("horizontal"===o.getDirection()){e>10-o.length&&(e=10-o.length),l>9&&(l=9);for(let t=0;t<o.length;t++)r[e+t][l]={ship:o,i:t}}else if("vertical"===o.getDirection()){l>10-o.length&&(l=10-o.length),e>9&&(e=9);for(let t=0;t<o.length;t++)r[e][l+t]={ship:o,i:t}}}else console.log(`cant place - ${o.name} -  on ${e},${l},${o.getDirection()}`);return{ship:o}},isPlaceEmpty:t,recieveAttack:(e,t,i)=>{let n=i;null===n[e][t]?n[e][t]="o":"object"==typeof n[e][t]&&null!==n[e][t]&&(n[e][t].ship.hit(n[e][t].i),l()?console.log("all ships are sunk"):console.log("still floating"))},allShipsSunk:l}})(),t=e.getGrid();e.placeShip(0,0,{name:"three",length:3},"horizontal",t),e.placeShip(0,5,{name:"four",length:4},"horizontal",t),e.recieveAttack(0,0,t),e.recieveAttack(1,0,t),e.recieveAttack(2,0,t),e.recieveAttack(3,0,t),e.recieveAttack(0,5,t),e.recieveAttack(1,5,t),e.recieveAttack(2,5,t),e.recieveAttack(3,5,t),console.log(e.getGrid())})();